import { احصل, التالي, تحقق, تطابق } from "../TokenUtils.js";
import { إدارة_المسافة_البادئة } from "../Indentation.js";
import { إنشاء_الشفرة } from "../../AlifGenerator.js";

export function محلل_دالة(الرموز) {
    تطابق(الرموز, "كلمة", "دالة");

    const اسم = تطابق(الرموز, "معرف").القيمة;
    if (!اسم) {
        const error = new Error(`لا يوجد اسم للدالة`);
        error.line = `في السطر ` + احصل(الرموز).السطر;
        throw error;
    }

    تطابق(الرموز, "اقواس", "(");
    const معاملات = [];
    while (!تحقق(الرموز, "اقواس", ")")) {
        const معرف = تطابق(الرموز, "معرف");
        if (معرف) معاملات.push(معرف.القيمة);
        if (تحقق(الرموز, "فاصلة")) التالي(الرموز);
    }
    تطابق(الرموز, "اقواس", ")");

    if (!تطابق(الرموز, "نقطتان")) {
        console.error(`توقعت ":" بعد تعريف الدالة`);
    }

    const اوامر = إدارة_المسافة_البادئة(الرموز, "دالة");
    if (!تحقق(الرموز, "مسافة")) {
        return { نوع: "دالة", اسم, معاملات, اوامر };
    }
    return {
        نوع: "دالة",
        اسم,
        معاملات,
        اوامر,
    };
}

export function منشئ_دالة(مستوى, عداد, عقدة, داخل_برنامج) {
    const اسم = عقدة.اسم;
    const معاملات = (عقدة.معاملات || []).join(", ");
    const اوامر = عقدة.اوامر
        .map((ج) => إنشاء_الشفرة(ج, مستوى + 1, عداد, داخل_برنامج))
        .join("\n");
    return `function ${اسم}(${معاملات}) {\n${اوامر}\n}`;
}
