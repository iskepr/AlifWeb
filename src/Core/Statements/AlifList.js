import { رمي_خطأ } from "../AlifErrors.js";
import { محلل_التعبير } from "../Expressions.js";
import { التالي, السابق, تحقق, تطابق } from "../TokenUtils.js";

export function محلل_المصفوفة(الرموز) {
    تطابق(الرموز, "اقواس", "[");
    التالي(الرموز);

    // دعم [7 لاجل _ في مدى(9)]
    if (تحقق(الرموز, "كلمة", "لاجل")) {
        السابق(الرموز);
        const الرقم = تطابق(الرموز).القيمة;
        التالي(الرموز);
        التالي(الرموز);
        تطابق(الرموز, "رمز", "_");
        تطابق(الرموز, "كلمة", "في");
        تطابق(الرموز, "كلمة", "مدى");
        التالي(الرموز);
        تطابق(الرموز, "اقواس", "(");
        const عدد_التكرار = تطابق(الرموز).القيمة;
        التالي(الرموز);
        تطابق(الرموز, "اقواس", ")");

        تطابق(الرموز, "اقواس", "]");
        let قيم = [];

        let القيمة = {
            نوع: "قيمة",
            قيمة: الرقم,
        };
        for (let i = 0; i < عدد_التكرار; i++) قيم.push(القيمة);

        return { نوع: "قائمة", قيم };
    }

    السابق(الرموز);
    const قيم = [];
    while (!تحقق(الرموز, "اقواس", "]")) {
        // تخطي المسافات والاسطر الفارغة
        while (تحقق(الرموز, "مسافة") || تحقق(الرموز, "سطر_جديد"))
            التالي(الرموز);

        const القيمة = محلل_التعبير(الرموز);
        if (!القيمة) رمي_خطأ(`خطأ في قيم القائمة`, الرموز);

        قيم.push(القيمة);

        // اذا لا يوجد فاصلة توقف
        if (تحقق(الرموز, "فاصلة")) التالي(الرموز);
        else break;
    }
    if (!تطابق(الرموز, "اقواس", "]")) رمي_خطأ(`لم يتم اغلاق القوس "]"`, الرموز);
    return قيم;
}
