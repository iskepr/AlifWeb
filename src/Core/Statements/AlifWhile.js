import { احصل, التالي, تحقق, تطابق } from "../TokenUtils.js";
import { محلل_التعبير } from "../Expressions.js";
import { محلل_الجملة } from "../../AlifParser.js";
import { إنشاء_الشفرة } from "../../AlifGenerator.js";

export function محلل_بينما(الرموز) {
    تطابق(الرموز, "كلمة", "بينما");
    // تخطي المسافات والاسطر الفارغة
    while (تحقق(الرموز, "مسافة") || تحقق(الرموز, "سطر_جديد")) التالي(الرموز);

    // الشروط
    let الشروط = [];
    while (true) {
        const القيمة = محلل_التعبير(الرموز);
        الشروط.push(القيمة);
        if (تطابق(الرموز, "نقطتان")) break;
    }

    // ما بداخل بينما
    const القيم = [];
    while (تحقق(الرموز, "سطر_جديد")) التالي(الرموز);
    if (!تحقق(الرموز, "مسافة")) {
        return { نوع: "بينما", الشروط, القيم };
    }
    const التبويب = احصل(الرموز).القيمة.length;
    التالي(الرموز);
    القيم.push(محلل_الجملة(الرموز));
    while (true) {
        while (تحقق(الرموز, "سطر_جديد")) التالي(الرموز);
        if (!تحقق(الرموز, "مسافة") || احصل(الرموز).القيمة.length < التبويب)
            break;
        التالي(الرموز);
        القيم.push(محلل_الجملة(الرموز));
    }

    return { نوع: "بينما", الشروط, القيم };
}

export function منشئ_بينما(مستوى, عداد, عقدة, داخل_برنامج) {
    const الشروط = عقدة.الشروط
        .map((ج) => إنشاء_الشفرة(ج, مستوى + 1, عداد, داخل_برنامج))
        .join("\n");
    const القيم = عقدة.القيم
        .map((ج) => إنشاء_الشفرة(ج, مستوى + 1, عداد, داخل_برنامج))
        .join("\n");
    return `while (${الشروط}) {\n\t${القيم}\n}`;
}
