import { إنشاء_الشفرة } from "../../AlifGenerator.js";
import { رمي_خطأ } from "../AlifErrors.js";
import { محلل_التعبير } from "../Expressions.js";
import { تحقق, تطابق, التالي, السابق } from "../TokenUtils.js";

export function محلل_الوقت(الرموز, الدالة_الام) {
    let الهدف = {
        السنة: 2025,
        الشهر: 7,
        اليوم: 12,
        الساعة: 0,
        الدقيقة: 37,
        الثانية: 28,
        يوم_اسبوع: 5,
        يوم_سنة: 193,
        هل_صيفي: 1,
        النطاق: "EEST",
        الإزاحة: 10800,
    };
    تطابق(الرموز, "كلمة", "الوقت");
    تطابق(الرموز, "نقطة");

    let الامر = تطابق(الرموز, "معرف");
    if (!الامر) رمي_خطأ(`لم يتم تحديد أمر الوقت`, الرموز, الدالة_الام);
    if (
        الامر.القيمة !== "الان" &&
        الامر.القيمة !== "وقت" &&
        الامر.القيمة !== "منسق" &&
        الامر.القيمة !== "غفوة"
    )
        رمي_خطأ(`الامر "${الامر.القيمة}" غير معروف`, الرموز, الدالة_الام);
    الامر = الامر.القيمة;

    تطابق(الرموز, "اقواس", "(");

    let قيم = [];
    while (!تحقق(الرموز, "اقواس", ")")) {
        const قيمة = محلل_التعبير(الرموز, الدالة_الام);
        if (!قيمة) break;
        قيم.push(قيمة);

        // تخطي المسافات الفارغة
        while (تحقق(الرموز, "مسافة")) التالي(الرموز);

        if (تحقق(الرموز, "فاصلة")) التالي(الرموز);
    }
    if (!تطابق(الرموز, "اقواس", ")"))
        رمي_خطأ(`لم يتم اغلاق القوس ")" بعد الوقت`, الرموز, الدالة_الام);
    return { نوع: "الوقت", الامر, قيم };
}

export function دوال_استيراد_الوقت() {
    return `
    function دالة_ارجاع_الوقت(الثواني = Math.floor(Date.now() / 1000)) {
        let الوقت = new Date(الثواني * 1000);
        let بداية_السنة = new Date(الوقت.getFullYear(), 0, 1);
        let الفرق = الوقت - بداية_السنة;
        let يوم_السنة = Math.floor(الفرق / (1000 * 60 * 60 * 24)) + 1;
    
        return {
            السنة: الوقت.getFullYear(),
            الشهر: الوقت.getMonth() + 1,
            اليوم: الوقت.getDate(),
            الساعة: الوقت.getHours(),
            الدقيقة: الوقت.getMinutes(),
            الثانية: الوقت.getSeconds(),
            يوم_اسبوع: الوقت.getDay(),
            يوم_سنة: يوم_السنة,
            هل_صيفي: الوقت.getTimezoneOffset() < new Date(الوقت.getFullYear(), 0, 1).getTimezoneOffset() ? 1 : 0,
            النطاق: الوقت.toTimeString().split(" ")[1],
            الإزاحة: -الوقت.getTimezoneOffset() * 60
        };
    }
    
    function دالة_ارجاع_الوقت_منسق(الثواني = Math.floor(Date.now() / 1000)) {
        const الوقت = دالة_ارجاع_الوقت(الثواني);
        const ايام_الاسبوع = [
            "الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"
        ];
        const اشهر = [
            "يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو",
            "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"
        ];
        
        const الناتج = \`\${ايام_الاسبوع[الوقت.يوم_اسبوع]} \${اشهر[الوقت.الشهر - 1]} \${الوقت.اليوم} \${String(الوقت.الساعة).padStart(2, "0")}:\${String(الوقت.الدقيقة).padStart(2, "0")}:\${String(الوقت.الثانية).padStart(2, "0")} \${الوقت.السنة}\`;
        return الناتج;
    }
    `;
}

export function منشئ_الوقت(مستوى, عداد, عقدة) {
    const الامر = عقدة.الامر;
    const قيم = عقدة.قيم
        .map((v) => إنشاء_الشفرة(v, مستوى, عداد))
        .filter((v) => v !== "0");
    let قيمة = قيم.join(", ");

    if (الامر == "الان") return `new Date(${قيمة}).getTime() / 1000`;
    if (الامر == "وقت") return `دالة_ارجاع_الوقت(${قيمة})`;
    if (الامر == "منسق") return `دالة_ارجاع_الوقت_منسق(${قيمة})`;

    if (الامر == "غفوة")
        return `await new Promise(resolve => setTimeout(resolve, ${قيمة} * 1000))`;
}
