let عداد_العناصر = 0;

function توليد_كود(ast, مستوى = 0, عداد = { قيمة: 0 }, داخل_برنامج = false) {
    const مسافة = "  ".repeat(مستوى);

    const مولدات = {
        برنامج: (عقدة) => {
            const كود = عقدة.جمل
                .map((ج) => توليد_كود(ج, مستوى, عداد, true))
                .join("\n");
            return (
                `const __fragment = document.createDocumentFragment();\n` +
                `${كود}\n` +
                `document.body.appendChild(__fragment);`
            );
        },

        اطبع: (عقدة) =>
            `${مسافة}console.log(${توليد_كود(عقدة.قيمة, مستوى, عداد)});`,

        نص: (عقدة) => {
            عداد.قيمة++;
            const اسم = `عنصر${عداد.قيمة}`;
            const محتوى = JSON.stringify(
                توليد_كود(عقدة.قيمة, مستوى, عداد).replace(/^["']|["']$/g, "")
            );
            const سطر1 = `${مسافة}const ${اسم} = document.createElement("p");`;
            const سطر2 = `${مسافة}${اسم}.textContent = ${محتوى};`;
            const سطر3 = داخل_برنامج
                ? `${مسافة}__fragment.appendChild(${اسم});`
                : `${مسافة}document.body.appendChild(${اسم});`;
            return [سطر1, سطر2, سطر3].join("\n");
        },

        ارجع: (عقدة) => `${مسافة}return ${توليد_كود(عقدة.قيمة, مستوى, عداد)};`,

        اذا: (عقدة) => {
            const شرط = توليد_كود(عقدة.شرط, 0, عداد);
            const جسم = عقدة.جسم
                .map((ج) => توليد_كود(ج, مستوى + 1, عداد, داخل_برنامج))
                .join("\n");
            return `${مسافة}if (${شرط}) {\n${جسم}\n${مسافة}}`;
        },

        بينما: (عقدة) => {
            const شرط = توليد_كود(عقدة.شرط, 0, عداد);
            const جسم = عقدة.جسم
                .map((ج) => توليد_كود(ج, مستوى + 1, عداد, داخل_برنامج))
                .join("\n");
            return `${مسافة}while (${شرط}) {\n${جسم}\n${مسافة}}`;
        },

        قيمة: (عقدة) => {
            const v = عقدة.قيمة;
            if (typeof v === "boolean") return v ? "true" : "false";
            if (v === null) return "null";
            if (!isNaN(v)) return v;
            return v;
        },

        متغير: (عقدة) => {
            const الاسم = عقدة.اسم;
            const القيمة = توليد_كود(عقدة.قيمة, مستوى, عداد);
            return `${مسافة}let ${الاسم} = ${القيمة};`;
        },

        معرف: (عقدة) => `${عقدة.اسم}`,

        عملية: (عقدة) => {
            const يسار = توليد_كود(عقدة.يسار, 0, عداد);
            const يمين = توليد_كود(عقدة.يمين, 0, عداد);
            const عامل = عقدة.عامل;
            return `(${يسار} ${عامل} ${يمين})`;
        },
    };

    const مولد = مولدات[ast.نوع];
    if (!مولد) throw new Error("نوع غير مدعوم: " + ast.نوع);
    return مولد(ast);
}

module.exports = { توليد_كود };
