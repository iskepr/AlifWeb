export function تحليل_الشفرة(الشفرة) {
    const الكلمات = [
        "ارجع",
        "توقف",
        "استمر",
        "صح",
        "خطا",
        "خطأ",
        "عدم",
        "استورد",
        "اطبع",
        "اشعار",
        "طول",
        "ادنى",
        "اقصى",
        "ادخل",
        "اضف",
        "امسح",
        "ادرج",
        "مفاتيح",
        "عام",
        "صحيح",
        "عشري",
        "مصفوفة",
        "لاجل",
        "لأجل",
        "بينما",
        "اذا",
        "إذا",
        "اواذا",
        "اوإذا",
        "والا",
        "وإلا",
        "احذف",
        "حاول",
        "خلل",
        "نهاية",
        "دالة",
        "جلب",
        "من",
        "صنف",
        "_تهيئة_",
        "الوقت",
        "الرياضيات",
        "صفحة",
        "نص",
        "رابط",
        "عمودي",
        "رأسي",
        "توسيط",
        "بطاقة",
    ];

    const نمط_الرموز = [
        { النوع: "مسافة", regex: /^[ ]+/ },
        { النوع: "مسافة", regex: /^[\t]+/ },
        { النوع: "تعليق", regex: /^#.*(\n|$)/ },
        { النوع: "سطر_جديد", regex: /^\n/ },
        { النوع: "فاصلة_م", regex: /^(;|؛)/ },
        { النوع: "اقواس", regex: /^(\(|\)|\[|\]|\{|\})/ },
        { النوع: "فاصلة", regex: /^(,|،)/ },
        { النوع: "نقطة", regex: /^\./ },
        { النوع: "نقطتان", regex: /^:/ },
        { النوع: "رقم", regex: /^\-?\d+(\.\d+)?/ },
        { النوع: "نص", regex: /^م?(['"])(.*?)\1/ },
        {
            النوع: "رمز_حسابي",
            regex: /^(\+=|-=|\*=|\\=|\^=|\\\*=|\\\\=|==|!=|<=|>=|<|>|\+|\-|\*|\\\\|\\\*|\^|\\\^|\\|ليس في|ليس)/,
        },
        {
            النوع: "معرف",
            regex: /^[a-zA-Z\u0600-\u06FF_][a-zA-Z0-9\u0600-\u06FF_]*/,
        },
        { النوع: "رمز", regex: /^_/ },
        { النوع: "علامة_إسناد", regex: /^=/ },
    ];

    let الرموز = [];
    let السطر = 1;
    let بداية_السطر = true;

    while (الشفرة.length > 0) {
        let متطابق = false;

        // تحليل المسافات أولًا
        if (بداية_السطر) {
            for (const نمط of [نمط_الرموز[0], نمط_الرموز[1]]) {
                const تطابق = الشفرة.match(نمط.regex);
                if (تطابق) {
                    const المسافة = تطابق[0];
                    if (نمط === نمط_الرموز[0] ? المسافة.length > 1 : true) {
                        الرموز.push({ النوع: "مسافة", القيمة: المسافة, السطر });
                    }
                    الشفرة = الشفرة.slice(المسافة.length);
                    متطابق = true;
                }
            }
        }

        // فحص باقي الأنماط
        for (const النمط of نمط_الرموز) {
            if (النمط.النوع === "مسافة") continue;
            const تطابق = الشفرة.match(النمط.regex);
            if (تطابق) {
                let القيمة = تطابق[0];

                const الكلمات_الخاصة = [
                    "وإلا",
                    "اوإذا",
                    "اواذا",
                    "والا",
                    "او",
                    "أو",
                    "و",
                    "في",
                ];
                if (النمط.النوع === "معرف") {
                    const تطابق_خاص = الكلمات_الخاصة.find((كلمة) => {
                        return new RegExp(
                            `^${كلمة}(?![\\u0621-\\u064A0-9_])`
                        ).test(الشفرة);
                    });

                    if (تطابق_خاص) {
                        const النوع =
                            تطابق_خاص === "في" ||
                            تطابق_خاص === "و" ||
                            تطابق_خاص === "أو" ||
                            تطابق_خاص === "او"
                                ? "رمز_حسابي"
                                : "كلمة";

                        الرموز.push({
                            النوع,
                            القيمة: تطابق_خاص,
                            السطر,
                        });

                        الشفرة = الشفرة.slice(تطابق_خاص.length);
                        متطابق = true;
                        بداية_السطر = false;
                        break;
                    }
                }

                if (النمط.النوع === "تعليق") {
                    if (القيمة.includes("\n")) السطر++;
                    بداية_السطر = true;
                } else if (النمط.النوع === "سطر_جديد") {
                    الرموز.push({ النوع: "سطر_جديد", القيمة: "\n", السطر });
                    السطر++;
                    بداية_السطر = true;
                } else if (النمط.النوع === "فاصلة_م") {
                    الرموز.push({ النوع: "سطر_جديد", القيمة: "\n", السطر });
                    بداية_السطر = true;
                } else if (النمط.النوع === "معرف" && الكلمات.includes(القيمة)) {
                    الرموز.push({ النوع: "كلمة", القيمة, السطر });
                    بداية_السطر = false;
                } else {
                    الرموز.push({ النوع: النمط.النوع, القيمة, السطر });
                    بداية_السطر = false;
                }

                الشفرة = الشفرة.slice(القيمة.length);
                متطابق = true;
                break;
            }
        }

        // مسافات أو فراغات بعد نهاية السطر
        if (!متطابق && /^\s+/.test(الشفرة)) {
            const فراغات = الشفرة.match(/^\s+/)[0];
            const سطور_جديدة = فراغات
                .split("")
                .filter((x) => x === "\n").length;
            السطر += سطور_جديدة;
            الشفرة = الشفرة.slice(فراغات.length);
            بداية_السطر = true;
            continue;
        }

        if (!متطابق)
            throw new Error(
                `المحلل: " ${الشفرة.slice(0, 10)} " غير معروف في السطر ${السطر}`
            );
    }

    return الرموز;
}
