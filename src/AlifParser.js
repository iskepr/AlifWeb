function محلل_الرموز(رموز) {
    let الموشر = 0;

    function احصل() {
        return رموز[الموشر];
    }
    function التالي() {
        الموشر++;
        return احصل();
    }
    function تحقق(النوع, القيمة = null) {
        const رمز = احصل();
        if (!رمز) return false;
        if (رمز.النوع !== النوع) return false;
        if (القيمة !== null && رمز.القيمة !== القيمة) return false;
        return true;
    }
    function تطابق(النوع, القيمة = null) {
        if (تحقق(النوع, القيمة)) {
            const الرمز = احصل();
            التالي();
            return الرمز;
        }
        return null;
    }

    const المحللات = {
        اطبع: محلل_الطباعة,
        ادخل: محلل_ادخل,
        طول: محلل_طول,
        ادنى: محلل_ادنى,
        اقصى: محلل_اقصى,
        اشعار: محلل_اشعار,
        اضف: محلل_اضف,
        امسح: محلل_امسح,
        ادرج: محلل_ادرج,
        مفاتيح: محلل_مفاتيح,
        متغير: محلل_متغير,
        دالة: محلل_دالة,
        استورد: محلل_استورد,
        ارجع: محلل_الارجاع,
        اذا: محلل_الاذا,
        استمر: محلل_استمر,
        توقف: محلل_توقف,
        عام: محلل_عام,
        صحيح: محلل_صحيح,
        عشري: محلل_عشري,
        مصفوفة: محلل_مصفوفة,
        صح: محلل_صح,
        خطأ: محلل_خطأ,
        خطا: محلل_خطا,
        عدم: محلل_عدم,
        // -------------------------------------------- html -------------------------------------------- //
        نص: محلل_النص,
        رابط: محلل_الرابط,
    };

    function محلل_التعبير() {
        const رمز = احصل();

        if (تحقق("رقم") || تحقق("نص") || تحقق("معرف")) {
            return { نوع: "قيمة", قيمة: احصل().القيمة, رمز: التالي() };
        }

        // استدعاء امر داخل امر
        if (تحقق("كلمة")) {
            const كلمة = احصل().القيمة;
            if (المحللات[كلمة]) {
                return المحللات[كلمة]();
            }
        }

        if (تحقق("معرف")) {
            return { نوع: "معرف", اسم: التالي().قيمة };
        }

        if (تحقق("قيمة")) {
            التالي();
            تحقق("فاصلة");
            const قيم = [];
            while (!تحقق("اقواس", ")")) {
                // تخطي المسافات والأسطر الجديدة
                while (تحقق("مسافة") || تحقق("سطر_جديد")) {
                    التالي();
                }
                const value = محلل_التعبير();
                قيم.push({ value });
                // تخطي الفاصلة بين الخصائص
                if (تحقق("فاصلة")) {
                    التالي();
                }
            }
            تطابق("اقواس", ")");
            return { نوع: "قائمة_اقواس", قيم };
        }

        if (تحقق("اقواس", "(")) {
            التالي();
            const قيم = [];
            while (!تحقق("اقواس", ")")) {
                // تخطي المسافات والأسطر الجديدة
                while (تحقق("مسافة") || تحقق("سطر_جديد")) {
                    التالي();
                }
                const value = محلل_التعبير();
                قيم.push({ value });
                // تخطي الفاصلة بين الخصائص
                if (تحقق("فاصلة")) {
                    التالي();
                }
            }
            تطابق("اقواس", ")");
            return { نوع: "قائمة_اقواس", قيم };
        }

        if (تحقق("اقواس", "{")) {
            التالي();
            const خصائص = [];
            while (!تحقق("اقواس", "}")) {
                // تخطي المسافات والأسطر الجديدة
                while (تحقق("مسافة") || تحقق("سطر_جديد")) {
                    التالي();
                }
                let key;
                if (تحقق("نص")) {
                    const keyToken = تطابق("نص");
                    key = keyToken.القيمة.slice(1, -1);
                } else if (تحقق("معرف")) {
                    const keyToken = تطابق("معرف");
                    key = keyToken.القيمة;
                } else {
                    throw new Error(
                        `توقع مفتاح في الكائن عند السطر ${احصل()?.سطر}`
                    );
                }
                تطابق("رمز_حسابي", ":");
                const value = محلل_التعبير();
                خصائص.push({ key, value });
                // تخطي الفاصلة بين الخصائص
                if (تحقق("فاصلة")) {
                    التالي();
                }
            }
            تطابق("اقواس", "}");
            return { نوع: "كائن", خصائص: خصائص };
        }

        if (تحقق("اقواس", "[")) {
            التالي();
            const قيم = [];
            while (!تحقق("اقواس", "]")) {
                // تخطي المسافات والأسطر الجديدة
                while (تحقق("مسافة") || تحقق("سطر_جديد")) {
                    التالي();
                }
                const value = محلل_التعبير();
                قيم.push({ value });
                // تخطي الفاصلة بين الخصائص
                if (تحقق("فاصلة")) {
                    التالي();
                }
            }
            تطابق("اقواس", "]");
            return { نوع: "قائمة", قيم: قيم };
        }

        console.warn(`تحذير: تعبير غير مفهوم عند السطر ${رمز?.سطر}`);
        التالي(); // عشان ما يحصلش توقف لا نهائي
        return { نوع: "غير_معروف", رمز };
    }

    function محلل_جملة() {
        const كلمة = احصل()?.القيمة;
        if (كلمة && المحللات[كلمة]) return المحللات[كلمة]();

        const متغير = محلل_متغير();
        if (متغير) return متغير;

        const رمز = احصل();
        console.error(`جملة غير مفهومة عند السطر ${رمز?.سطر}:`, رمز);
        التالي(); // عشان يتخطى الرمز الغريب
        return { نوع: "غير_معروف", رمز };
    }

    function محلل_متغير() {
        const معرف = تطابق("معرف");
        if (معرف && تحقق("علامة_إسناد", "=")) {
            تطابق("علامة_إسناد", "=");
            const قيمة = محلل_التعبير();
            return { نوع: "متغير", اسم: معرف.القيمة, قيمة };
        }
        if (معرف) {
            الموشر--;
        }
        return null;
    }

    function محلل_عام_للاقواس(الكلمة) {
        تطابق("كلمة", الكلمة);
        تطابق("اقواس", "(");
        const قيمة = محلل_التعبير();
        تطابق("اقواس", ")");
        return { نوع: الكلمة, قيمة };
    }
    function محلل_الطباعة() {
        return محلل_عام_للاقواس("اطبع");
    }
    function محلل_ادخل() {
        return محلل_عام_للاقواس("ادخل");
    }
    function محلل_طول() {
        return محلل_عام_للاقواس("طول");
    }
    function محلل_اقصى() {
        return محلل_عام_للاقواس("اقصى");
    }
    function محلل_ادنى() {
        return محلل_عام_للاقواس("ادنى");
    }
    function محلل_اشعار() {
        return محلل_عام_للاقواس("اشعار");
    }

    function محلل_عام_للاقواس_يسبقها_نقطة(الكلمة) {
        let متغير = تطابق("معرف");
        تطابق("اقواس", ".");
        تطابق("كلمة", الكلمة);
        تطابق("اقواس", "(");
        const قيمة = محلل_التعبير();
        if ((الكلمة = "مفتاح")) {
            قيمة = "";
        } else {
            قيمة = محلل_التعبير();
        }
        تطابق("اقواس", ")");
        return { نوع: الكلمة, قيمة, المتغير: متغير };
    }
    function محلل_اضف() {
        return محلل_عام_للاقواس_يسبقها_نقطة("اضف");
    }
    function محلل_امسح() {
        return محلل_عام_للاقواس_يسبقها_نقطة("امسح");
    }
    function محلل_ادرج() {
        return محلل_عام_للاقواس_يسبقها_نقطة("ادرج");
    }
    function محلل_مفاتيح() {
        return محلل_عام_للاقواس_يسبقها_نقطة("مفاتيح");
    }
    function محلل_صحيح() {
        return محلل_عام_للاقواس("صحيح");
    }
    function محلل_عشري() {
        return محلل_عام_للاقواس("عشري");
    }
    function محلل_مصفوفة() {
        return محلل_عام_للاقواس("مصفوفة");
    }

    function محلل_عام_للكلمات(الكلمة) {
        تطابق("كلمة", الكلمة);
        const قيمة = محلل_التعبير();
        return { نوع: الكلمة, قيمة };
    }
    function محلل_الارجاع() {
        return محلل_عام_للكلمات("ارجع");
    }
    function محلل_استورد() {
        return محلل_عام_للكلمات("استورد");
    }
    function محلل_عام() {
        return محلل_عام_للكلمات("عام");
    }
    function محلل_استمر() {
        return محلل_عام_للكلمات("استمر");
    }
    function محلل_توقف() {
        return محلل_عام_للكلمات("توقف");
    }
    function محلل_صح() {
        return محلل_عام_للكلمات("صح");
    }
    function محلل_خطأ() {
        return محلل_عام_للكلمات("خطأ");
    }
    function محلل_خطا() {
        return محلل_عام_للكلمات("خطا");
    }
    function محلل_عدم() {
        return محلل_عام_للكلمات("عدم");
    }

    function محلل_دالة() {
        تطابق("كلمة", "دالة");

        const الاسم = تطابق("معرف");
        if (!الاسم) throw new Error("يجب تحديد اسم للدالة");

        تطابق("اقواس", "(");
        const المعاملات = [];
        while (!تحقق("اقواس", ")")) {
            const معرف = تطابق("معرف");
            if (معرف) المعاملات.push(معرف.القيمة);
            if (تحقق("فاصلة")) التالي();
        }
        تطابق("اقواس", ")");

        if (!تطابق("اقواس", ":")) {
            console.error(`توقعت ":" بعد تعريف الدالة`);
        }

        const جسم = [];
        while (
            الموشر < رموز.length &&
            !تحقق("كلمة", "دالة") &&
            !تحقق("كلمة", "نهاية")
        ) {
            if (تحقق("سطر_جديد")) {
                التالي();
                continue;
            }
            جسم.push(محلل_جملة());
        }

        return {
            نوع: "دالة",
            اسم: الاسم.القيمة,
            معاملات: المعاملات,
            جسم: جسم,
        };
    }
    function محلل_الاذا() {
        تطابق("كلمة", "اذا");
        const شرط = محلل_التعبير();
        تطابق("اقواس", ":");

        const جسم = [];
        while (!تحقق("كلمة", "والا") && الموشر < رموز.length) {
            if (تحقق("سطر_جديد")) {
                التالي();
                continue;
            }
            جسم.push(محلل_جملة());
        }

        let والا_جسم = null;
        if (تطابق("كلمة", "والا")) {
            تطابق("اقواس", ":");
            والا_جسم = [];
            while (تحقق("سطر_جديد")) التالي();
            while (موشر < رموز.length && !تحقق("كلمة", "اذا")) {
                if (تحقق("سطر_جديد")) {
                    التالي();
                    continue;
                }
                والا_جسم.push(محلل_جملة());
            }
        }

        return { نوع: "اذا", شرط, جسم, والا: والا_جسم };
    }

    // html
    function محلل_html(الكلمة) {
        تطابق("كلمة", الكلمة);
        تطابق("اقواس", "(");
        const قيم = [];
    
        while (true) {
            // تخطي المسافات والأسطر الجديدة
            while (تحقق("مسافة") || تحقق("سطر_جديد")) {
                التالي();
            }
    
            // نهاية القائمة؟
            if (تحقق("اقواس") && التالي_رمز().قيمة === ")") {
                break;
            }
    
            // أضف القيمة
            const قيمة = محلل_التعبير();
            قيم.push({ value: قيمة });
    
            // تخطي المسافات والأسطر الجديدة
            while (تحقق("مسافة") || تحقق("سطر_جديد")) {
                التالي();
            }
    
            // هل فيه فاصلة؟ لو مفيش يبقى خلصنا
            if (تحقق("فاصلة")) {
                التالي(); // تجاهل الفاصلة
            } else {
                break;
            }
        }
    
        // تخطي أي مسافات أو أسطر جديدة قبل القوس
        while (تحقق("مسافة") || تحقق("سطر_جديد")) {
            التالي();
        }
    
        تطابق("اقواس", ")");
        return { نوع: الكلمة, قيم };
    }    
    function محلل_النص() {
        return محلل_html("نص");
    }
    function محلل_الرابط() {
        return محلل_html("رابط");
    }

    function ابدأ() {
        const جمل = [];
        while (الموشر < رموز.length) {
            if (تحقق("سطر_جديد")) {
                التالي();
                continue;
            }
            جمل.push(محلل_جملة());
        }
        return { نوع: "برنامج", جمل };
    }
    return ابدأ();
}

module.exports = { محلل_الرموز };
