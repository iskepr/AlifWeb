#!/usr/bin/env node
import { تشغيل_الف } from "./src/Models/AlifRun.js";
import { بناء_الف } from "./src/Models/AlifBuild.js";

import { pubLib } from "./AlifLib.js";
import { getLib } from "./AlifLib.js";
import { updateLib } from "./AlifLib.js";
import { alifUpdate } from "./AlifLib.js";

import { إعادة_تعيين_المؤشر } from "./src/Core/TokenUtils.js";
import { تحليل_الشفرة } from "./src/AlifLexer.js";
import { محلل_الرموز } from "./src/AlifParser.js";
import { إنشاء_الشفرة } from "./src/AlifGenerator.js";
import fs from "fs";
import path from "path";
import promptSync from "prompt-sync";
const prompt = promptSync();

let شفرة_مترجمة;

// المدخلات في الطرفية
const command = process.argv[2];
export const fileName = process.argv[3];
const اضافي = process.argv[4];

if (["-v", "ص", "اصدار"].includes(command)) {
    console.log(`0.1.0 اصدار لغة الف للويب`);
} else if (["-h", "م", "مساعدة"].includes(command)) {
    console.log(`
    - اوامر لغة الف
        -v, ص, اصدار: اصدار اللغة.
        -h, م, مساعدة: اظهار هذه القائمة
        اسم_الملف.الف: تشغيل ملف محدد.
        عدم كتابة شئ: تشغيل ملف رئيسي.الف.
        build, بناء: بناء ملف.
    
    - اوامر مدير المكتبات
        pub, نشر: نشر المكتبات.
        i, تحميل: تحميل المكتبات.
        update, تحديث + اسم المكتبة: تحديث المكتبة.
        update, تحديث: تحديث لغة الف.
    `);
} else if (["build", "بناء"].includes(command)) {
    if (fileName && (fileName.endsWith(".alif") || fileName.endsWith(".الف"))) {
        بناء_الف(fileName);
    } else {
        بناء_الف();
    }
} else if (["pub", "publish", "نشر"].includes(command)) {
    pubLib();
} else if (["get", "install", "i", "تحميل"].includes(command)) {
    getLib();
} else if (["update", "تحديث"].includes(command)) {
    if (fileName) {
        updateLib();
    } else {
        alifUpdate(false);
        alifUpdate(true);
    }
} else if (["local", "محلي"].includes(command)) {
    const مسار_الملف = path.join(process.cwd(), اضافي ? اضافي : "./رئيسي.الف");
    fs.readFile(مسار_الملف, "utf8", async (خطأ, شفرة) => {
        if (خطأ) {
            console.error(`الملف "${مسار_الملف}" غير موجود`);
            process.exit();
        }
        try {
            إعادة_تعيين_المؤشر();
            const رموز = تحليل_الشفرة(شفرة);
            const ast = محلل_الرموز(رموز);
            شفرة_مترجمة = إنشاء_الشفرة(ast);
            eval(شفرة_مترجمة);
        } catch (e) {
            console.error(
                "خطأ أثناء التوليد:",
                e.line ? e.message + " " + e.line : e
            );
        }
    });
} else {
    if (command && (command.endsWith(".alif") || command.endsWith(".الف"))) {
        تشغيل_الف(command);
    } else {
        تشغيل_الف();
    }
}
